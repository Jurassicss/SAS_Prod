@use 'sass:math';

@function rem($pixel) {
    @if math.is-unitless($pixel) {
        @return math.div($pixel, 16) + rem;
        } @else {
            @error 'Не используйте единицы измерения при работе с функцией rem()! Передавайте аргументом только числа.';
        }
    }
    
    @function vw1920($pixel) {
        @if math.is-unitless($pixel) {
            @return math.div($pixel, 19.2) + vw;
            } @else {
                @error 'Не используйте единицы измерения при работе с функцией rem()! Передавайте аргументом только числа.';
            }
        }
        
        // @function vh1920($pixel) {
            //   @if math.is-unitless($pixel) {
                //     @return math.div($pixel, 19.2) + vw;
                //   } @else {
                    //     @error 'Не используйте единицы измерения при работе с функцией rem()! Передавайте аргументом только числа.';
                //   }
            // }
            
            // @function vh2k($pixel) {
                //   @if math.is-unitless($pixel) {
                    //     @return math.div($pixel, 19.2) + vw;
                    //   } @else {
                        //     @error 'Не используйте единицы измерения при работе с функцией rem()! Передавайте аргументом только числа.';
                    //   }
                // }
                
                
                
                @function fluid($max: 100, $min: 10) {
                    $maxViewportWidth: 2560;
                    $minViewportWidth: 360;
                    
                    $maxSize: math.div($max, 16);
                    $minSize: math.div($min, 16);
                    $maxWidth: math.div($maxViewportWidth, 16);
                    $minWidth: math.div($minViewportWidth, 16);
                    
                    $slope: math.div(($maxSize - $minSize), ($maxWidth - $minWidth));
                    $yAxisIntersection: -$minWidth * $slope + $minSize;
                    
                    @return clamp(
                        #{$minSize * 1rem},
                        #{$yAxisIntersection * 1rem} + #{$slope * 100vw},
                    #{$maxSize * 1rem}
                    );
                }
                
                // @function while-for-elements-grid($name){
                    //   $var = 1;
                    //   @for i in $name;
                    //     $var += 0;
                //     $name li:nth-child($var)
                
            // }
            
            
            