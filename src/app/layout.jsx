// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.scss";
// import { Header } from "@/components/header/header";
// import { UserProvider } from "./context/UserContext";
// import 'pdfjs-dist/web/pdf_viewer.css';


// const geistSans = Geist({
// 	variable: "--font-geist-sans",
// 	subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
// 	variable: "--font-geist-mono",
// 	subsets: ["latin"],
// });

// export const metadata = {
// 	title: "SAS",
// 	description: "Generated by create next app",
// 	// themeColor: "#000000", // Добавляет <meta name="theme-color" content="#000000">
// 	manifest: "/manifest.json", // Добавляет <link rel="manifest" href="/manifest.json">
// 	icons: {
// 		icon: "/favicon.ico", // Добавляет <link rel="icon" href="/favicon.ico">
// 	},
// 	// Другие метатеги
// 	openGraph: {
// 		title: "My App",
// 		description: "My awesome Next.js app",
// 		url: "https://myapp.com",
// 		siteName: "My App",
// 		images: [
// 			{
// 				url: "https://myapp.com/og-image.png",
// 				width: 800,
// 				height: 600,
// 			},
// 		],
// 	}
// };
// export const viewport = {
// 	themeColor: '#000000',
// };

// export default function RootLayout({ children }) {
// 	return (
// 		<html lang="en">

// 			<body className={`${geistSans.variable} ${geistMono.variable}`}>
// 				<UserProvider>
// 					{children}
// 				</UserProvider>
// 			</body>

// 		</html>
// 	);
// }

// app/RootLayout.jsx
import { Geist, Geist_Mono } from "next/font/google";
import './globals.scss';
import { UserProvider } from "./context/UserContext";
import ServerChecker from "@/components/ServerChecker/ServerChecker";

const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
const geistMono = Geist_Mono({ variable: "--font-geist-mono", subsets: ["latin"] });

export const metadata = { title: "SAS" };

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <UserProvider>
          <ServerChecker>
            {children}
          </ServerChecker>
        </UserProvider>
      </body>
    </html>
  );
}
